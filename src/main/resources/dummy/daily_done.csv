date,content,hours,minutes,memo,tag
2025-09-30,オリジナルWebアプリ開発（READMEの作成: シーケンス図・クラス図の作成）,5,45,フロー図はやめてシーケンス図にした。ER図と合わせて計5枚になったけど、ひとつひとつが細かくて見づらい気もしている🤔,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-09-30,オリジナルWebアプリ開発（READMEの作成: 工夫したところ（途中））,1,0,工夫したところはユーザーを意識した工夫と技術的な工夫の2視点で書いているところ。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-09-29,オリジナルWebアプリ開発（READMEの作成: フロー図・クラス図の作成（途中））,5,0,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-09-28,オリジナルWebアプリ開発（拡張機能（予定）のためにDBカラムを一部追加）,1,30,本番デプロイ後にDBの構成を変更しなくても良いように、拡張機能（予定）用に必要なカラムを追加しておくことにした。それに伴ってコードも一部微修正。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis"
2025-09-28,オリジナルWebアプリ開発（READMEの作成: 機能一覧、ER図作成、クラス図作成（途中））,3,45,機能一覧を書いて、ER図に初挑戦！ テーブル数が多いからごちゃごちゃ見えないように、カラムは書かずにテーブル間の関係性のみにした。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis"
2025-09-27,オリジナルWebアプリ開発（コード修正）,2,30,ユーザー登録時のメールアドレス入力を任意に変更。それに伴いカラム設定からNOT NULLを削除。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #Docker"
2025-09-27,オリジナルWebアプリ開発（READMEの作成: デモ動画の収録（途中））,0,15,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-09-27,オリジナルWebアプリ開発（デプロイ準備: docker-compose.yamlの作成）,1,15,MySQLのみ設定していたdocker-composeを修正し、アプリとMySQLを設定した開発用のdocker-compose.override.yamlとdocker-compose.yamlをそれぞれ作成。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Docker"
2025-09-26,オリジナルWebアプリ開発（コーディング）,2,0,ユーザー登録のバリデーションとしてメールアドレスを必須にするのは、アプリを試してもらうハードルが高くなるかも、と思ったのでそこだけ直す（拡張機能としてメールアドレス認証によるパスワードの再設定を検討していた）。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #Docker"
2025-09-26,オリジナルWebアプリ開発（READMEの作成（途中））,1,0,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-09-26,"オリジナルWebアプリ開発（デプロイ準備: Dockerfile, .dockerignoreの作成）",3,0,MySQLはすでにコンテナで構築していたけど、Dockerfileを作成してアプリもコンテナ化する。EC2無料枠を使用予定のため、軽量になるようにChatGPTと相談してイメージを決めた。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Docker"
2025-09-25,オリジナルWebアプリ開発（最終見直し（途中）、バグ修正、バリデーションの追加、Javadoc&コメントアウトの修正）,6,0,昨日発見したバグ修正とバリデーションチェック漏れの修正の続き。エラーメッセージを出すときになぜかmessages .propertiesのパラメータが効かなくて苦戦💦 結局パラメータは使用せずにそれぞれ分けることにして、例外の種類のenumで引数に応じたメッセージキーを取得できるようにしたのだけど、メッセージキーは正しく取得できているのに、なぜかデフォルトメッセージ表示されてしまう謎🤔 キャッシュか何かが影響していそうな感じがしたのでクリアしても解決せず💦 デフォルトメッセージでも問題ないといえばないので、一旦保留にしてデプロイ前に再チャレンジすることに！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-24,オリジナルWebアプリ開発（最終見直し（途中）、バグ修正、Javadoc&コメントアウトの修正）,5,0,"自分の書いたCSSファイルが汚すぎて整理に手こずるという自業自得💦
整理後にUIが崩れていないかの確認ついでに動作確認も行っていたらバグを発見💡 原因と思われる部分を修正したら解決できた。そしてバリデーションチェック漏れにも気付く🥺","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-23,オリジナルWebアプリ開発（最終見直し（途中）、Javadoc&コメントアウトの修正）,5,45,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-22,オリジナルWebアプリ開発（リファクタリング（途中）、Javadocの修正、ダッシュボードページのレイアウト変更）,5,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-21,オリジナルWebアプリ開発（リファクタリング（途中）、Javadocの修正）,5,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-20,オリジナルWebアプリ開発（リファクタリング（途中）、Javadocの修正、本番環境の検討）,5,45,本番環境の検討も。Render候補にしてたけどPostgreSQLに移行する必要があるから、やっぱりEC2かつコスト抑えるためにRDSではなくコンテナMySQLかな🤔,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-19,オリジナルWebアプリ開発（リファクタリング（途中）、Javadocの修正）,6,0,"以前見直した部分の再見直しをしつつ、細かい部分の調整。そして再び生まれるissue😇
Javadocやコメントアウトは全体を通して表記揺れがないように最終見直しに向けて、揺れていそうな部分をissueに書き留める。
Service層のメソッドを共通化するかは未だに悩み中🤔","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-18,オリジナルWebアプリ開発（リファクタリング（途中）、Javadocの修正）,5,45,"以前見直したところの再見直し&issueの解消。
Controller内部で弾いていたバリデーションをカスタムバリデータに外出し。
placeholderつけていないinputのうちバリデーションに関わる項目はplaceholderをつけるなど、細かい部分の調整。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-17,オリジナルWebアプリ開発（リファクタリング（途中））,4,15,"Chart.jsの設定、同ファイル内だけど共通関数として持てた。ticksは最大値によって刻み方調整する必要があってロジック組むのはコストが高そうだったのと、ラベルつけてるからなくても良い気がしたのでつけないことにした。
これでダッシュボード周りもひとまず落ち着いた、はず！","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #Chart.js, #JavaScript"
2025-09-16,オリジナルWebアプリ開発（リファクタリング（途中））,5,15,"BigDecimalからintに、時間単位から分単位に変更したことにより、処理も一部修正。計算はSQL文でsum()してたからそのまま使えて良かった！
グラフの値は分のまま、ラベルなどの表記だけh/mにすることに。明日はグラフの微調整とChart.js設定内部の共通関数を外出ししたい。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-15,オリジナルWebアプリ開発（リファクタリング（途中））,5,30,"記事ストック周りのUI綺麗化&責務分離の見直しも概ね完了し、ダッシュボード周りに入れた。
学習時間の抽出ロジックをヘルパークラスとして外出ししてたけど、Serviceに落とし込めるのでは？と考え中🤔
Serviceの責務が重くなりすぎないようにバランス考えながら調整したい","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-14,オリジナルWebアプリ開発（リファクタリング（途中））,4,15,"昨日のsubmit問題は解消できた！ DTOへのid代入漏れ&textareaにrequiredをつけてしまっていたことが原因だった模様。
メモ周りのUI綺麗化&責務分離の見直しは概ね完了し、記事ストック周りにも入れた。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-13,オリジナルWebアプリ開発（リファクタリング（途中））,4,0,"今日は「メモ」周りのUI綺麗化&責務分離の見直しに入った。
tableの幅が変動するようになってしまっていたので、table-layout: fixedで固定。
新規登録時のsubmitがなぜか効かなくなってしまったので（更新はできる）、原因を突き止めたい。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #EasyMDE"
2025-09-12,オリジナルWebアプリ開発（リファクタリング（途中））,6,0,"「目標」周りのUI綺麗化&責務分離の見直しはほぼ完了した！
Repository層を追加したことでService層にロジック盛り盛りできるようになったから、外出ししてた各アクションにおけるidでのレコード取得→DTOに詰める→タグ取得→DTOに詰めるあたりの処理を吸収してみたけど、やっぱり共通化したままのほうが良いような気もしているので、「メモ」「記事ストック」周りの見直しが完了したら改めて再考したい。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-11,オリジナルWebアプリ開発（リファクタリング（途中））,5,0,"タグ付け処理を責務に合わせてタグサービスと中間テーブルサービスとに分割。中間テーブルサービスは共通化しているので、親クラスにロジックを持たせてサブクラスでOverride。
タグ名リストを生成する処理、各アクションテーブルで組み立てているけど、組み立てはタグサービスに移動させたい","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-10,オリジナルWebアプリ開発（リファクタリング（途中））,6,0,"中間テーブル周りもRepositoryを新設してServiceの処理を一部Repositoryに移動させて責務分離。
「目標」周りに進む。ここで再び責務ごっちゃになっているのでは？と気付く。複数テーブルを（JOINせず）横断してDTOを用意しているからちゃんと分けたい。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-09,オリジナルWebアプリ開発（リファクタリング（途中））,5,30,自分が15分単位（端数切り捨て）で記録をつけているから気にならなかったけど、5分単位や10単位でつけたい人には不便だよなと思い、学習時間をDECIMAL（BigDecimal）からINT（int）に変更し、入力フォームは時間と分でわけて、DBには分単位で登録することにした。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-09-08,オリジナルWebアプリ開発（リファクタリング（途中））,5,30,"アノテーションで制御できないバリデーションについて、DTOに持たせたメソッドをControllerで呼び出して判定していたけど、チェック項目が多いとごちゃっとするのでカスタムバリデーションを作ってinitBinderで一括判定する形に変更した。
再描画時に入力用DTO以外のオブジェクトを詰め直すの忘れがちなことに気付いたので気をつけたい。
エラー時の再描画後にJSが上手く効かなくなってかなり苦戦💦 ChatGPTとも相談しながら調整して解決💡","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript, #Tagify"
2025-09-07,オリジナルWebアプリ開発（リファクタリング（途中））,5,45,結局tbodyループのままで最終行に線を引いて区切りがわかるようにした。Tagifyの装飾も見直して閲覧ページと同じような見た目になるように調整できた。Tagifyの設定部分もJSファイルに切り出して共通化。UI綺麗化は完了！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript, #Tagify"
2025-09-06,オリジナルWebアプリ開発（リファクタリング（途中））,6,15,"DTOを分割したことで、閲覧ページでもタグっぽい装飾をつけられるようになった。
編集ページは内容・学習時間・メモ・タグのまとまりをどう表現するか改めて悩み中。「やること」はtbodyループにしたけど「できたこと」はtableループのほうが良いかも🤔","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript, #Tagify"
2025-09-06,先輩受講生のインタビュー動画を視聴,1,0,,#就職活動
2025-09-05,オリジナルWebアプリ開発（リファクタリング（途中））,4,15,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript"
2025-09-05,Gitについて学習,0,45,"これまで何も気にせずに思いついたまま変更していたけど、ブランチ切ってコミットすることを意識したら、今いるブランチでどこまで手を出すのか、次にコミットするまでにどこまで変更するのかを考えるようになった。
進捗は遅くなったけど、Gitを使っていくうえでは良い意識転換になっているはず！",#Git
2025-09-04,オリジナルWebアプリ開発（リファクタリング（途中）、ポップアップウィンドウの改修）,4,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript"
2025-09-04,Gitについて学習,1,0,,#Git
2025-09-03,オリジナルWebアプリ開発（リファクタリング（途中）、バリデーション詰め（途中）、messageKeyの定数化、ポップアップウィンドウの実装）,6,0,日ごとの初回登録時にポップアップウィンドウが表示されるようにした。messages. propertiesのKey部分も定数クラスで持つことにした。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript"
2025-09-02,オリジナルWebアプリ開発（やること入力枠を可変に、リファクタリング（途中）、バリデーション詰め（途中）、文字列を定数化）,6,45,"可変行やっと作れた〜！ [+]ボタンで行追加、[×]ボタンで行削除できるようになった！
バリデーションのうち全件空欄はControllerでエラー追加、単一空欄はServiceで無視、で分けた。
Modelで渡すDTO名やView名のタイポや修正漏れがあったから、定数クラスでまとめることにした。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript"
2025-09-01,オリジナルWebアプリ開発（やること入力枠を可変に（途中）、ポップアップウィンドウ実装に向けて情報収集）,1,0,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript"
2025-08-31,オリジナルWebアプリ開発（リファクタリング（途中）、やること入力枠を可変に（途中））,5,0,"アプリのコンセプト的にやっぱりタスク関連の入力枠は可変にしたいなと思って、+ボタンで増やして×ボタンで減らせるように調べながらJSを書き書き。indexの振り方に苦戦したけど追加行にclassをつけてそれをcountする方法で着地しそう。
登録済みの内容の個別削除は削除フラグを持たせて判断にした。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #JavaScript"
2025-08-30,オリジナルWebアプリ開発（リファクタリング（途中））,8,0,DTOの分割、Controller→Service→Repositoryの責務分離を意識したリファクタリングを中心に作業。昨日までに完了していた分も含めて、サインアップ、ログイン、ホーム、マイページのUI綺麗化&リファクタリングが概ね完了した。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-29,オリジナルWebアプリ開発（バリデーションチェック詰め（途中）、リファクタリング（途中））,5,0,サインアップ時とマイページでのユーザー登録情報変更時に必須にしたい項目が異なっていてNotBlankをつけたままだと変更できないし、外すとnullチェック処理が増えて見通しが悪くなるから、基本情報とパスワードでDTOを分けて、サインアップ時とマイページ表示時は統合DTOを使うことにした。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-28,オリジナルWebアプリ開発（バリデーションチェック詰め（途中）、リファクタリング（途中））,6,45,"昨日決めた方向性で責務分離の見直し&リファクタリング、UIの調整。
バックのコード書きはじめた頃と比べて少しは理解が深まってきているのか、自分のコードを見てなんじゃこりゃと思いながら修正できている😂
DTOも一部閲覧用(Response)と編集用(Request)で分けたほうが良い気がするので修正する！","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-27,オリジナルWebアプリ開発（バリデーションチェック詰め（途中）、リファクタリング（途中））,6,30,メッセージ類をpropertiesで一括管理するようにした。ServiceがRepositoryの役割、補助クラスがServiceの役割に近くなってしまっていたので、Repositoryを用意してそれぞれ適切な役割で振り直し。Controllerが抱えていた処理の一部をServiceに委譲してControllerを軽く。方向性はこれで良さそう！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-26,オリジナルWebアプリ開発（HTMLの改修&CSSの作成、HTML&CSSの微調整（途中）、バリデーションチェック詰め（途中）、リファクタリング（途中））,6,0,"ひととおりページが揃ったので、バリデーションチェックを詰めながらHTML&CSSを微調整しつつCSSの設定を統合できる部分は統合。
だいぶ終わりが見えてきたぜ！と思ったのも束の間、改めて見たControllerくん、業務ロジック抱えてない…？と気付く。
責務分離をちゃんとしたいので、Controllerはできるだけデータの受け取り&チェックのみにして、業務ロジックはServiceに委譲することに。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-25,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中）、リファクタリング）,6,0,"タグ別も数が多くなる可能性があることを想定して、トップページでは10件までの表示、10件以上存在する場合は全件表示用の別ページに遷移できるようにした。
Controllerがごちゃごちゃしてきたので、セッションチェックとViewに渡す用のデータを作成する処理をHelperとして切り出し。Chart.jsの設定も長くなってきたので、HTMLから外出ししてJSファイルとして持つことにした。
グラフデータの期間の変更機能などは拡張機能として追加することにして、初期はシンプルに直近分のみ確認できる形で完成させる予定。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #Chart.js, #JavaScript"
2025-08-24,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,2,15,日別は当日含む過去7日間をグラフ化&当日のみ透過なし、曜日別は上位2位を透過なし、月別は当月含む過去6ヶ月をグラフ化&当月のみ透過なし、タグ別は上位3位を透過なし、でハイライト表示することに。日別・月別は別ページでさらに過去分も確認できるようにしたい。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #Chart.js, #JavaScript"
2025-08-23,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,2,30,ダッシュボードページを改修し、Chart.jsもカスタム。backgroundColorとborderColorをアプリのテーマカラーに変更。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #Chart.js, #JavaScript"
2025-08-22,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,5,30,昨日とは別の箇所のselectで、今度は垂直中央揃えにしたくて試行錯誤。line-hightを調整してなんとか解決。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-21,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,3,15,selectはいろいろ試したけど解決しなかったので、中央揃えはしないことにした。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-20,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,6,15,selectタグ、そのままにしていたときはtext-align: center; が効いていたのに、::picker(select) { appearance: base-select; でカスタムしてたら効かなくなってしまった🤔 text-align-lastも効かず💦 appearance: none; ならいけるのかな🤔,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-19,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,5,0,TagifyはCDNのまま、DevToolsで調整したい箇所のCSSを確認しながら上書きする形でなんとかできた。編集フォームも表示とに似た感じで表形式にしてみたけどイマイチしっくりこない気がしている🤔 一旦これで次に進んで、あとでまた考えてみる！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS, #Tagify, #JavaScript"
2025-08-18,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,4,30,できたことリストの表示の仕方は迷った末に表形式にすることにした。内容の詳細などに使えるメモ欄はtextareaで複数行入力できるようにして、表示時はCSSでwhite-space: pre-lineで改行を反映。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-17,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,6,45,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-16,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,5,15,"今日は「やること」ページ。日付別で表示、デフォルトは当日のページ。ControllerからminusDays(1)、plusDays(1)を渡して前の日、次の日を表示。valueをform method=""get""でinput type=""date""のvalueを渡して選択した日付に飛べるようにした。編集、削除はアイコンクリックで選択。
アイコンクリックでの削除は、はじめinput type=""hidden"" name=""_method"" value=""delete""とDeleteMappingの組み合わせが機能しなくて、調べたところHiddenHttpMethodFilterを有効にする必要があるとのことだったので、application.propatiesに追加したらできた！
明日は編集フォームを整える！","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #CSS"
2025-08-15,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,4,30,"サイドバーをhover&activeでホバー時と該当ページ（カテゴリ）を開いているときに色が変わるようにした。
マイページはtableで整形して表示。
fragment内のimgを相対パスで書いてしまっていて、階層が変わると効かなくなっていたので、Thymeleafの@{}で統一することにした。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Thymeleaf, #HTML, #CSS"
2025-08-14,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,5,30,サイドバーの実装に苦戦💦 アイコンと文字をdisplay: flexとflex-direction: columnで並べて配置。バランスが難しかった。途中からリンクが効かなくなってなんでやと思ったら、メイン要素が被ってたことが原因のようだったので、z-indexで前面に持ってきたら解決できた！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Thymeleaf, #HTML, #CSS"
2025-08-13,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,7,30,背景画像にメニューアイコンを均等配置させることに苦戦。結局background-imageではなくhtmlに画像を持たせてcssで位置固定に落ち着いた。画面の縦横比が変わっても画像の位置関係は変わらないように設定できたはず。アイコンからは各ページに遷移&トークン持たせてログアウトできるようにした。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Thymeleaf, #HTML, #CSS"
2025-08-12,オリジナルWebアプリ開発（HTMLの改修&CSSの作成（途中））,6,30,ログインページとサインアップページは概ね実装できた。サインアップページは、バックのバリデーションチェックとエラーメッセージの表示をもう少し詰める。background-imageやらdisplay: gridやらを使う予定なので調整がんばる✊,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Thymeleaf, #HTML, #CSS"
2025-08-11,オリジナルWebアプリ開発（ワイヤーフレームの作成（途中）、HTMLの改修&CSSの作成（途中））,4,30,"ログインページとホームページ（ログイン後のページ）、共通ヘッダーとサイドバーのデザインは固まったので、固まったところから落とし込むぞ！と調べながらひたすらHTML改修&CSS作成。th:replaceで共通コンポーネントを呼び出してタグを置換する形でヘッダーを実装。
ログインページのみアプリタイトルも載せるためにth:ifとth:withで指定。headerタグ内部にth:withを書いてしまっていて、replaceで置換されてしまい変数に値が入らずth:ifが効かずに苦戦💦 headerタグを囲う形で書いたら上手くいった。
bodyにはデフォルトでmarginが入っているため0で余白をなくす。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Thymeleaf, #HTML, #CSS"
2025-08-10,オリジナルWebアプリ開発（PW再設定機能の実装、ワイヤーフレームの作成（途中））,3,30,バックの大枠は実装できたので、いよいよフロントの実装に入ります！ フロントと同時進行でバックを詰める予定。まずは設計時に後回しにしてしまったワイヤーフレーム作成に着手。FigmaとPenpotで迷い、Figmaを選択。デザインはシンプルにして、なるべく早めにコーディングに移りたい！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #Figma"
2025-08-09,オリジナルWebアプリ開発（月別・日別学習時間の可視化、PW再設定機能の実装（途中））,5,0,"フロントでどう表示することになってもフォーマット変換の自由が効くようにDATE_FORMAT()はせずに、DATE型のまま取得。月別はDATE_SUB(date, INTERVAL DAY(date)-1 DAY)で月初めに揃えてGROUP BYでまとめて集計。
PW再設定は、忘れた場合の再設定メール送信を検討していたけど、学習コストが高そうなので、今後デプロイするとしたら拡張機能として実装できるようにしたい。ローカルのうちは、ログイン後にマイページからのみ変更できるように実装。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #Chart.js, #JavaScript"
2025-08-08,オリジナルWebアプリ開発（タグ別学習時間の可視化、可視化するデータの再考（途中））,1,30,"各データはChart.jsを導入して可視化することに。タグ別学習時間は横棒グラフで描画。細かい設定はフロント実装時に調整する予定。
学習時間をどこまで細かく分析するか再考中。日別・月別・タグ別・累計は欲しいよね🤔","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #Chart.js, #JavaScript"
2025-08-07,オリジナルWebアプリ開発（アクションごとのポイント計算処理を実装、タグ別学習時間の集計処理を実装）,4,30,"SELECT FROM LEFT JOIN LEFT JOIN WHERE GROUP BYで3つのテーブルを結合してタグ別の学習時間時間をSUM()で取得。
SELECT句のカラムをCOALESCEで囲うことでタグなしも集計可能。COALESCEは引数のうちNULLじゃない最初の値を返すので、nullの場合に代替で使いたい値を渡しておくと便利。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis"
2025-08-06,オリジナルWebアプリ開発（リファクタリング、進捗管理レコードの作成 / 更新処理を実装、アクションごとのポイント計算処理を実装（途中））,5,45,"ユーザー登録時に進捗管理レコードを作成し、アクション登録時に更新する処理を実装。同時にボーナスポイント加算用のテーブルを更新する処理も実装。ポイント計算ロジックは明日実行確認する！

《メモ》
enumは、クラス内のabstractメソッドをenum定数ごとにOverrideできる。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis"
2025-08-05,オリジナルWebアプリ開発（リファクタリング、Controllerの一部を共通化）,4,0,"SpringにBeanとして認識させるために、共通メソッドを持たせたクラスにComponentアノテーションをつけた。
Controllerがだいぶスッキリしてきて嬉しい😊","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Tagify"
2025-08-04,オリジナルWebアプリ開発（リファクタリング、Controllerの一部を共通化（途中））,5,0,"中間テーブルの基底Entityインターフェースを定義し、各Entityレコードにimplementsさせる。BiFunction<>を使うことで、ジェネリクスで受け取った型を初期化できるようになる。ヘルパークラスに共通メソッドを実装し、中間テーブルのEntityやServiceをジェネリクスで渡すことで、アクションごとのタグ付け処理を共通化。
各DTOの基底クラスを抽象クラスとして定義。Entity→DTO変換メソッドなどを共通化して各DTOでoverrideして実装。自己参照ジェネリクスを用いて、自身のクラスを戻り値として返せるようにした。抽象型で受けたクラスのメソッドは、基底クラスで定義されたもののみ呼び出し可。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Tagify"
2025-08-03,オリジナルWebアプリ開発（リファクタリング、Service / Mapperの共通化）,4,45,"中間テーブルのServiceを共通化するために、基底Serviceを抽象クラスとして定義して各Serviceがextendsで継承。
同じく中間テーブルのMapperを共通化するために、基底インターフェースを各Mapperがextendsで継承。
両者のジェネリクスに渡せるように、各中間テーブル用のEntityを用意。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Tagify"
2025-08-02,オリジナルWebアプリ開発（リファクタリング）,0,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Tagify"
2025-08-01,オリジナルWebアプリ開発（リファクタリング、タグ付機能の実装（アクション別・途中））,3,45,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Tagify"
2025-07-31,オリジナルWebアプリ開発（リファクタリング、タグ付機能の実装（アクション別・途中））,5,30,"リファクタリングしつつJavaDocを記載。JavaDocは冗長かもと思いつつ細かめに書いたけど、長くなってしまった箇所もあったので最終的には削ることになりそう。
タグ付け機能は一昨日・昨日で実装したものを別のアクションにも反映。アクションごとにデータの持ち方が違うため、調整に苦戦💦","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Tagify"
2025-07-30,オリジナルWebアプリ開発（タグ付機能の実装）,3,0,"JSON形式で取得した文字列をObjectMapper.readValue()を使ってMap<String, String>に変換。.stream().map(m->m.getOrDefault(""value"","""").toList()で値のみ取り出してリスト化して複数タグを扱うことにした。
表示時はString.join()で「,」区切りのひとつの文字列にして対応。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Tagify"
2025-07-30,React本（副作用、純粋関数、純粋なコンポーネント、strict mode）,1,45,"副作用、純粋関数、純粋なコンポーネントについて。Reactではコンポーネントの純粋性を保つ（同じ入力に対して常に同じ出力を返す）ことが重要。
副作用とは、レンダリングには直接関係しない外部とのやりとり。コンポーネント内で副作用を実行すると純粋性を保てない。","#React, #JavaScript"
2025-07-29,オリジナルWebアプリ開発（タグ付機能の実装（途中））,4,30,タグ付けの補助ライブラリとしてTagifyを導入。whitelistにDB登録済みのタグをListで設定することで候補出しを実装。入力内容を取得するとJSON形式になっていたので、ObjectMapperでJSON→オブジェクトに変換する処理を実装する。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #Tagify, #JavaScript"
2025-07-28,オリジナルWebアプリ開発（メモの登録 / 更新 / 削除機能の実装、記事ストックの登録 / 更新 / 削除機能の実装）,4,0,Mackdown→HTMLの変換を実装。ソフトブレイクも改行されるようにMutableDataSetで設定。サニタイズはPolicyFactoiyでリンク、ブロック、テーブルのみ許可。画像は説明文&URLで表示されるようにPattern.compile()と.matcher()、matcher.replaceAll()で正規表現を用いて先に変換。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #EasyMDE"
2025-07-28,React本（宣言的 / 命令的UI、useReducer、レンダリング、useRef）,1,30,"useReducerもローカルステート。const [state(状態), dispatch(stateとactionをreducerに渡す関数)] = useReducer(reducer(dispatchから渡された情報を基にstateを更新する関数), initialState(stateの初期状態))という構造。更新ロジックを一元管理することができ、複雑な処理に向いてる。
useRefは「DOM要素の操作」「レンダリングに影響しない値の保存」時に使用。
例えば前者でvideoを再生する場合、DVDデッキなどのイメージ。const videoRef = useRef(null) でデッキを用意する。まだ電源は繋いでいない（null）。<video ref={videoRef}>で用意したデッキを電源に繋ぐ。
<source src={sampleVideo}>でDVDを入れる。if(videoRef.current)で電源が入っているか確かめる。状態に合わせて.play()で再生ボタンを押す、.pause()で一時停止ボタンを押す、というイメージ。","#React, #JavaScript"
2025-07-27,オリジナルWebアプリ開発（メモの登録 / 更新 / 削除機能の実装（途中））,2,30,メモ機能はEasyMDEをUNPKG CDNで導入してMarkdown記法で入力できるようにした。CDNは見直すかも。オプションはフロント実装時に再検討予定。エディタ入力→DTO→Entity→DB登録は成功。flexmark-javaとOWASP Sanitizerを依存関係に追加した。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML, #EasyMDE"
2025-07-27,React本（ラッパーコンポーネント、children）,1,30,"イベント関数は宣言時にはただの汎用的なイベントハンドラで用途未定。イベントと結び付いて初めて意味を為す。イベントが発生すると自動的にイベントオブジェクトが渡される。
ステートはconst [状態, 状態を更新する関数] = useState(初期設定)という構造。useStateはローカルステート。","#React, #JavaScript"
2025-07-26,オリジナルWebアプリ開発（目標（goal）の登録 / 更新 / 削除機能の実装）,5,30,"ドロップダウンリストからstatusを選択してDTO→Entity変換時にString→booleanに変更。DTOでは英字名で保持し、View表示時はdto.statusLabelを参照して日本語名で表記。
DB登録後にAUTO INCREMENTのidをパス変数に渡せるように、mapperにOptionsアノテーションを追加。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML"
2025-07-26,React本（ラッパーコンポーネント、children）,1,0,ラッパーコンポーネントは、コンポーネントや機能を包み込んだコンポーネントのこと。親コンポーネントでラッパータグで囲んだ要素を子要素（children）としてラッパーコンポーネントに渡すことができる。,"#React, #JavaScript"
2025-07-25,オリジナルWebアプリ開発（できたことリスト（done）登録 / 更新 / 削除機能の実装）,3,0,"学習時間をDBに登録する際、データ型をDECIMALにしていたけど、MySQLでは桁数を指定しないとデフォルトで(10,0)で整数に丸められてしまうため、ALTER TABLEでDECIMAL(4,2)に修正。DECIMALはJavaではBigDecimal、HTMLではtextで扱うため、DTOではStringで受け取り、Entityに変換するメソッド内でnew BigDecimal()でパースする。バリデーションチェックはDTOで小数点を含む5桁にしつつ、Controller側で日別の時間が24を超える場合にエラーを吐くようにした。最終的にはJSでリアルタイム計算&弾くようにしたい！（フロント実装時に検討予定）","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML"
2025-07-25,React本（JSXについて、条件分岐、繰り返し処理、コンポーネント、export、Props）,1,0,JSXの基本部分。コンポーネントごとにファイルを分けるのは、Javaで責任分離のためにクラスを分けるのと同じ感覚。exportの使い分けも概要は頭に入ったので、実際に書いていくなかで感覚を掴みたい。親子コンポーネントの引数渡し、スプレッド構文、分割代入も慣れが必要そう。,"#React, #JavaScript"
2025-07-24,オリジナルWebアプリ開発（PathValiableでURLから値を取得、できたことリスト（done）周り（途中））,2,0,パラメーターを変数で設定して、DTO→パス→メソッドというふうに値を渡す処理を実装できた！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Thymeleaf, #HTML"
2025-07-24,"React本（環境構築: Node.js, Vite, 依存PKGのインストール、ESLint, Prettierの導入）",2,0,"React本は環境構築部分。ESLintとPrettierが便利すぎて感動✨ それぞれプロジェクトごとにカスタムできるし、チーム開発にもってこいなのではと思った。
開発サーバーの起動、製品モードの書き出しと確認、Prettierの実行、とコマンドが複数出てきたので覚えていきたい","#React, #JavaScript, #Node.js, #Vite, #ESLint, #Prettier"
2025-07-23,オリジナルWebアプリ開発（やることリスト（todo）登録 / 更新 / 削除機能の実装）,2,0,hiddenで置いたidが0で内容が空欄の場合はcontinue、idが0で内容がある場合はINSERTで新規登録、idが0で内容が空欄の場合はDELETEで削除、idが0で内容がある場合はUPDATEで更新、が実装できた！,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML"
2025-07-23,React本（コンポーネント、宣言的UI、MPAとSPA、仮想DOM、苦手なこと）,1,30,"Reactは複数のコンポーネント（部品）を組み合わせてUIを構成する。
宣言的UI：「状態に応じて表示してね」と指定するだけで、値をどう扱ってどう更新するかはフレームワークに委ねる仕組みのこと
MPAはページ遷移時に毎回全体を再読込する。URLごとにページが切り替わり、それぞれに専用のhtmlテンプレートが必要。SPAは一部だけ差し替え。URLはひとつで、URLや状態に応じてJSがコンポーネントを切り替える。
仮想DOMはVBAのScreenUpdating=FalseとApplication.Calculation=xlManual（描画と自動計算を止めておいて、処理実行後に再描画&自動計算）に近いイメージ。仮想DOMツリーをメモリ上に作って、差分検出して必要最小限の変更をDOMに反映する。","#React, #JavaScript"
2025-07-22,オリジナルWebアプリ開発（やることリスト（todo）登録機能の実装（途中））,5,0,"ひとつの日付に対して複数の内容を入力→DBにはバラして登録→DBから取得した内容を日付でまとめて表示、ができた。セッションから取得したユーザー情報もちゃんと登録できてた。
更新処理のロジック（hiddenの値を取得して判定）がまだちゃんとできてないから固めたい。
View↔️Controllerの受け渡しの部分で手こずることが多いから、フロントの細かい部分というかちゃんとした見た目にするところはあとでやるにしても、バックを進めるにあたってもう少しフロントの知識があったほうがスムーズに進められそう。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML"
2025-07-21,オリジナルWebアプリ開発（ユーザー情報をセッションから取得、ログアウト機能）,3,30,"ユーザー情報はSecurityContextHolder.getContext().getAuthentication().getPrincipal()でログイン時に作ったCustomUserDetailsから取得できた。これで投稿機能を実装時にユーザー情報と併せてDBに登録できるはず！
ログアウト機能はひとまず最小構成で設定。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #SpringSecurity"
2025-07-20,オリジナルWebアプリ開発（ユーザー登録機能の実装）,4,30,"DTOの扱いを掴むまでに苦戦した💦 DTOはフォームに入力された値をバリデーションチェックしながらDBに渡すデータに変換するオブジェクト。基本的にはビジネスロジックは持たないけど、「変換」だから責務内と見なしてDBに渡す用のtoEntityだけ持たせて、エンコードもここで行うことにした。
無事にフォームに入力された値を取得→変換&パスワードのハッシュ化→DB登録ができて、新規登録したデータでのログインも確認できた。
DBのUNIQUEキーに応じた例外処理も実装して、重複エラー、バリデーションエラーのメッセージも仮置きしたので、あとはフロント実装時に詰める予定。","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML"
2025-07-19,オリジナルWebアプリ開発（ログイン機能の実装）,5,45,"Spring Security、カスタマイズ性が高すぎるせいか、人によってやり方が少しずつ異なっていて、どの工程が必須なのかわかりづらかったので、自分の認識を整理しながら処理の流れを確認するためにChatGPTと相談して進めた。
AuthenticationManagerで受け取ってDaoAuthenticationProviderに委譲する部分の理解が曖昧だったことが判明。ひとまずシンプル設計でProviderは自作せずに進めることにした。
認証が上手くいかず、詳細ログを出力したらuserIdがフォームから取得できていなかったので、コードを確認したところ、usernameParameter()の指定とhtmlのname属性がズレていたことが判明。そこを揃えたら無事にフォームに入力した内容を取得できて、DBに登録済みの情報を基にログインする機能が実装できたー！ やったー！","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis, #Thymeleaf, #HTML"
2025-07-18,オリジナルWebアプリ開発（ログイン機能の実装（途中））,4,15,Spring本と公式リファレンスと技術記事を照らして確認しながら書いて、デフォルトのログインページから仮置きのログインページへの変更と自動で生成されるID&PWでのログインは実装できた。,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Thymeleaf, #HTML"
2025-07-17,"オリジナルWebアプリ開発（Service, Controllerの実装（途中））",0,45,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-07-16,職務経歴書の作成,0,30,,#就職活動
2025-07-16,"オリジナルWebアプリ開発（Service, Controllerの実装（途中）、DBテーブルの修正）",3,0,"テーブル作成時にカラム名やデータ型を間違えていたものがあったことに気づいたので修正。Service、Controllerも一部実装。ひとまずテーブルごとに実装しておいて、フロント着手時に構成を見直す予定。

《メモ》
＊ALTER TABLE文のMODIFY句でデータ型、CHANGE句でカラム名&データ型を変更できる","#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis"
2025-07-15,オリジナルWebアプリ開発（Mapperインターフェースの実装）,2,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #MySQL, #MyBatis"
2025-07-14,職務経歴書の作成,1,0,,#就職活動
2025-07-14,オリジナルWebアプリ開発（ログイン機能の実装（途中））,1,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #SpringSecurity"
2025-07-13,先輩受講生のインタビュー動画を視聴,1,0,,#就職活動
2025-07-13,自己分析,2,0,,#就職活動
2025-07-13,職務経歴書の作成,2,0,,#就職活動
2025-07-12,職務経歴書の作成,0,30,,#就職活動
2025-07-12,オリジナルWebアプリ開発（コンテナの設定、DBテーブルの初期化、ログイン機能の実装（途中））,5,15,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト, #Docker, #MySQL, #SpringSecurity"
2025-07-11,職務経歴書の作成,1,45,,#就職活動
2025-07-10,職務経歴書の作成,0,30,,#就職活動
2025-07-10,オリジナルWebアプリ開発（要件定義）,3,45,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-07-09,職務経歴書の作成,0,30,,#就職活動
2025-07-09,オリジナルWebアプリ開発（要件定義（途中））,3,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-07-08,職務経歴書の作成,0,45,,#就職活動
2025-07-08,オリジナルWebアプリ開発（依存関係の整理、DBテーブル構造の設計、スケッチの作成）,3,30,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-07-07,職務経歴書の作成,0,30,,#就職活動
2025-07-07,オリジナルWebアプリ開発（アイディア出し）,3,15,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-07-06,自己分析,1,45,,#就職活動
2025-07-06,職務経歴書の作成,1,45,,#就職活動
2025-07-05,Javaコース Webアプリ開発編 Day14（EC2を作成して、簡単なLinux環境を構築（復習））,1,15,Linux2023でEC2インスタンスを再作成。SSH接続が上手くいかなくてタイムアウトに。インスタンス削除→再作成を何度かするうちに、デフォルトのサブネットがprivateなことに気づき、publicを選択して作成したら、無事に接続できた。昨日と同じUNPRECEDENTED〜が出たのでchmod 400で権限付与。Linux2023にはamazon-linux-extrasが存在しないので、sudo dnf install javaでインストール。そのままだと24になっちゃうので、java-21-amazon-corretto-develと指定。,"#Java, #Webアプリ開発, #AWS, #EC2, #Linux"
2025-07-05,Javaコース Webアプリ開発編 Day15（RDSの作成）,0,45,Linux2023にはmysqlも存在しないようだったので、sudo dnf install mariadb105でコマンドラインクライアントをインストールして解決。,"#Webアプリ開発, #AWS, #RDS, #MySQL, #Linux"
2025-07-05,Javaコース Webアプリ開発編 Day16（EC2上でSpringBootを起動）,1,30,git clone後、viコマンドでファイルを修正したら、escキーでノーマルモードに戻って:wqで保存して終了する必要有り。無事にJava21のまま、EC2上でSpring Bootを起動させることに成功！ ELBの作成も問題なくできました。,"#Java, #SpringBoot, #Webアプリ開発, #AWS, #EC2, #Linux"
2025-07-05,Javaコース Webアプリ開発編 Day17（ELBの作成）,1,15,,"#Webアプリ開発, #AWS, #ELB"
2025-07-05,Javaコース Webアプリ開発編 Day18（複雑なWebアプリケーションの概要）,0,45,,#Webアプリ開発
2025-07-05,Javaコース（リスキリング） 総復習テスト（初級編）,0,15,,"#Java, #Webアプリ開発, #MySQL, #SpringBoot, #AWS, #ELB"
2025-07-05,職務経歴書の作成,1,45,,#就職活動
2025-07-04,Javaコース Webアプリ開発編 Day14（EC2を作成して、簡単なLinux環境を構築）,1,45,"SSH接続をしようとしたら""Warning: UNPROTECTED PRIVATE KEY FILE!""が出た。秘密鍵を保護せよとのことなので、調べてchmodで権限を付与。600にしたけど、400でも良かったのかも。改めてchmodについて調べたらまとめてくれている記事があった。","#Java, #Webアプリ開発, #AWS, #EC2, #Linux"
2025-07-04,Javaコース Webアプリ開発編 Day15（RDSの作成）,1,0,"インスタンスタイプの選択肢に動画にはなかった""db.t4g.micro""があり、見たところのスペックは同じようだったので調べてみたところ、""db.t3.micro""と同等スペックで低価格とのこと。どちらも無料枠で使えるようだったので""db.t4g.micro""を選択してみた。","#Webアプリ開発, #AWS, #RDS, #MySQL, #Linux"
2025-07-04,Javaコース Webアプリ開発編 Day16（EC2上でSpringBootを起動（途中））,2,45,"EC2上でSpring Bootを起動させる際、リポジトリのクローンに苦戦。SSHへの理解が甘かった。EC2でSSHを作成→GitHubに追加→EC2に登録→クローンでできた。
Javaバージョン違いでビルドエラー（想定内）。Linux2が17なのに対し、Appは21。Linux2に21をインストールしようと思ったが、すでにrampdownフェーズで21は公式では非提供の模様。Appを17にしようと思ったが、OracleのDLページは21と24のみで、17はアーカイブ扱い。
どうしようか迷ったけど、Linux2023でEC2インスタンスを作り直してJDK21で統一することにして、EC2インスタンスとRDSを削除。
復習も兼ねてまたEC2インスタンスの作成→RDSの作成をして、今度こそSpring Bootの起動までいきたい！","#Java, #SpringBoot, #Webアプリ開発, #AWS, #EC2, #Linux"
2025-07-03,Javaコース Webアプリ開発編 Day12（クラウド / AWSとは）,0,30,,"#AWS, #Webアプリ開発"
2025-07-03,Javaコース Webアプリ開発編 Day13（AWSのアカウント作成 / AWS利用時の注意事項）,0,45,MFA認証を設定する際に、どの認証方式にするべきなのか、少し悩んだ。セキュリティや従量課金など、今後使用するにあたって意識しておかなければいけないこともあることがわかったので、講義と並行して調べたい。わかりやすそうな書籍があるか調べる！,"#AWS, #Webアプリ開発"
2025-07-03,オリジナルWebアプリ開発（アイディア出し）,0,45,,"#Java, #SpringBoot, #Webアプリ開発, #個人開発, #えらいコレクト"
2025-07-02,Javaコース Webアプリ開発編 Day10（SpringBoot上での例外処理）,2,30,,"#Java, #SpringBoot, #Webアプリ開発, #Postman"
2025-07-02,Javaコース Webアプリ開発編 Day11（認証と認可）,1,0,,"#Java, #SpringBoot, #Webアプリ開発, #SpringSecurity"
2025-07-01,Javaコース Webアプリ開発編 Day7（REST APIの解説）,1,0,,"#Java, #SpringBoot, #Webアプリ開発"
2025-07-01,Javaコース Webアプリ開発編 Day8（REST APIの実行方法）,1,0,,"#Java, #SpringBoot, #Webアプリ開発, #Postman"
2025-07-01,Javaコース Webアプリ開発編 Day9（設定値、難易度、各種情報登録、更新処理の作成）,1,45,"POST実行時に「8080はすでに使ってるよ」エラーだったので、lsof -i :8080で使用しているプロセスを確認して、kill -{PID｝で終了させて解決。
バルクINSERTやバルクUPDATEを実行するには、jsonをリスト形式で書くだけじゃなくて、実装コードも一括処理ができるように変更する必要があるみたいだった（Serviceクラスのメソッドをfor文にする？）。","#Java, #SpringBoot, #Webアプリ開発, #Postman"
2025-06-30,Javaコース Webアプリ開発編 Day4（SpringとSpringBootの違い）,0,30,,"#Java, #SpringBoot, #Webアプリ開発"
2025-06-30,Javaコース Webアプリ開発編 Day5（設定値、難易度、各種情報取得処理の作成 前編）,2,0,"《メモ》
＊War（Web Application Archive）はJavaのWebアプリケーションをひとつにまとめたファイル","#Java, #SpringBoot, #Webアプリ開発"
2025-06-30,Javaコース Webアプリ開発編 Day6（設定値、難易度、各種情報取得処理の作成 後編）,2,0,,"#Java, #SpringBoot, #Webアプリ開発"
2025-06-29,Javaコース Webアプリ開発編 Day1（Webアプリケーションとは）,0,45,,#Webアプリ開発
2025-06-29,Javaコース Webアプリ開発編 Day2（アプリケーションサーバーについて）,0,45,,#Webアプリ開発
2025-06-29,Javaコース Webアプリ開発編 Day3（SpringBootでHelloWorld）,2,0,"HelloWorld の表示は中級Day8の課題としてもやっていたけど、QuickStart Guideの手順とは少し違っていたので、もう一度やってみた。Spring Bootは最新の3.5.3、Javaは手元のバージョンに合わせて21を選択。
講義動画と違って、何も設定しない場合はエラー画面ではなく”It works!”が表示された。
“It works!”は何も設定しない場合のデフォルトの画面らしいのだけど、これがどこからきているのか、設定ファイルなどが見当たらずわからなかった🤔 気になるのでまた調べてみたい。

《メモ》
＊Controllerは、リクエストを受け取り、適切な処理を実行してレスポンスを返す役割を担う。MVCのC。","#Java, #SpringBoot, #Webアプリ開発"
2025-06-28,Dockerコンテナ、MySQL、MyBatisの接続の復習（Qiita記事の作成）,4,0,,"#Java, #Docker, #MySQL, #MyBatis, #Qiita"
2025-06-28,ミニゲーム開発（開発メモの整理）,1,0,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-27,Dockerコンテナ、MySQL、MyBatisの接続の復習（Qiita記事の作成（途中・3編構成のうち2編完成））,6,0,,"#Java, #Docker, #MySQL, #MyBatis, #Qiita"
2025-06-27,ミニゲーム開発（リポジトリを更新）,0,30,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-26,Dockerコンテナ、MySQL、MyBatisの接続の復習（Qiita記事の作成（途中・3編構成のうち1編完成））,4,30,"Qiitaの記事、書き始めていたら長くなりそうだったので内容に鑑みて、①コンテナ作成編、②MyBatis連携編、③番外編（コンテナ作成時の警告メッセージを紐解く）の3編構成にすることにした。うち、①は完成！ 残りの②、③を書き終えてから一度に投稿予定。
自分の記事を読んだ誰かが困らないように、と意識することで、改めてしっかりとソースを確認して自分の理解を深めることに繋がるのだと実感。実際に曖昧だった部分が少し晴れて、push済みのリポジトリを一部修正する必要がありそう。","#Java, #Docker, #MySQL, #MyBatis, #Qiita"
2025-06-25,Dockerコンテナ、MySQL、MyBatisの接続の復習（Qiitaアカウントの作成、Qiita記事の作成（途中））,4,45,"前々回・前回の1on1で、躓いたところなどはQiitaに残しておくと良いよとアドバイスをいただいていて、以前はまだまだ自分が投稿なんて…と思っていたけど、何事も経験じゃ！決意し、復習も兼ねてdocker周りで試行錯誤した部分を記事にしてみようと思い、Qiitaアカウントを作りました！
文章を書いていくなかで、記事にするからには、と実装時よりもしっかり調べて理解しようとする気持ちが生まれるので、「なんとなくこうしたら成功した」の一歩先に行ける気がしています。","#Java, #Docker, #MySQL, #MyBatis, #Qiita"
2025-06-24,ミニゲーム開発（プレイ動画の編集、READMEの作成、GitHubへpush）,6,30,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #BlackHole, #DaVinciResolve"
2025-06-23,ミニゲーム開発（プレイ動画の収録・確認、プレイ動画の編集（途中）、コードの軽微修正）,7,30,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #BlackHole, #DaVinciResolve"
2025-06-22,ミニゲーム開発（プレイ動画の収録・確認、プレイ動画の編集（途中））,6,15,昨日録った素材を使っていざ編集！と思ったら、一部不備が見つかって録り直しに。昨日確認したときは気付かなかった💦 その後はDavinci Resolveに苦戦。はじめましてのアプリに対する読みが甘かった😭,"#Minecraftプラグイン開発, #個人開発, #BreakSpell, #BlackHole, #DaVinciResolve"
2025-06-21,ミニゲーム開発（プレイ動画の収録・確認（途中）、コードの軽微修正）,7,0,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #BlackHole"
2025-06-20,ミニゲーム開発（プレイ動画の収録・確認（途中）、コードの軽微修正）,8,30,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #BlackHole"
2025-06-19,ミニゲーム開発（READMEの作成（途中）、プレイ動画の収録（途中））,5,45,今回は音響効果もつけているので、内部音源を収録できるようにBlackHoleをインストール。画面録画のテストは完了！ プレイ動画はもはや毎度お馴染みのマイクラ操作下手すぎ問題が再び足を引っ張っている😂,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #BlackHole"
2025-06-18,ミニゲーム開発（READMEの作成（途中））,5,0,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-17,ミニゲーム開発（コーディング: コードの最終確認&最終実行確認、READMEの作成（途中））,5,15,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-16,ミニゲーム開発（コーディング: コードの最終確認・リファクタリング（途中）、最終実行確認（途中）、READMEの作成（途中））,4,15,"最終確認をするなかでさらにリファクタリングできるのでは？ってところが見つかってしまった。処理のかたまりをメソッド抽出することは意識できるようになってきたけど、抽出済みのメソッドのかたまりを抽出することを見落としがちのような気がしている。
設計の段階でしっかりと組み立てられていたら予めある程度のかたまりが見えた状態でコードを書き始めることができそうだから、やっぱりしっかりと設計することが大事なんだろうなと改めて感じた。今度何かを作るときは、そこもちゃんと意識したい。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-15,ミニゲーム開発（コーディング: バグの修正、コードの最終確認（途中）、最終実行確認（途中））,5,30,昨日躓いたところは無事解決！ メソッド内でベタ打ち代入していた部分を、enumに持たせたメソッドを呼び出して代入する形に変更したのに、連動するメソッドに渡す引数を変更してなかったことが原因だった。コードを修正するときは必ず関連メソッドも確認しないとだめだなと反省💧,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-14,ミニゲーム開発（コーディング: コードの最終確認（途中）、最終実行確認（途中））,5,45,"最終確認で削ったコードが必要なコードで実行確認時にエラーになって無限にゾンビが湧き続ける現象アゲイン💦 原因はすぐにわかったので修正して解決。DB周りも想定と違う挙動になっていたので修正。まだ直しきれていない箇所もあるので確認と修正をする！
DB周りは特にレコードがない状態の検証をデータを消しては確認してを繰り返したつもりだったけど、足りてなかったのかなと思う。コードに少しでも手を加えたら都度実行確認しないとだめだなと改めて実感。今回は見送ったけど、次の機会にはテストコードにも挑戦したい！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-13,"ミニゲーム開発（コーディング: delay, period, volume, pitch, countなどの数値の定数化、コードの最終確認（途中））",5,30,,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-12,ミニゲーム開発（Dockerの導入: docker compose up -dの実行確認、プラグインとdockerの接続確認）,5,30,"はじめローカルのMySQLを確認してしまっていて、DBできてない！なんで！となったけど、コンテナ内に作っているからコンテナ内を覗かなきゃいけないことに気が付いて、docker exec -it {コンテナ名} mysql -u root -p で確認したらちゃんと作成できてた。
MyBatisからコンテナ内部のDBを読み込むのも苦戦。docker-compose.ymlでポート番号を3306:3306で指定してDBを作成していたけど、3306はローカルのMySQLがすでに使っているから、MyBatisがlocalhost:3306を読み込もうとするとローカルのMySQLを読んでしまいunknown databaseに。
docker-compose.ymlの指定を3307:3306に、mybatis-config.xmlのurlをlocalhost:3307に修正して解決！

《おさらい》
＊「ホストOSのポート番号:コンテナ内のポート番号」で、ホストのOSのポート番号にアクセスするとコンテナ内のポート番号に転送するよ、という意味","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis, #Docker"
2025-06-11,ミニゲーム開発（Dockerの導入: Docker Desktopのインストール、docker-compose.ymlの作成、init.sqlの作成、.envの作成）,5,30,"VMとコンテナの違いを考えてみた。
＊VMは行列のできる有名料理店。
フルコースで出てくる。お店にいかなきゃ食べられなくて、予約/行列待ちで食べるまでに時間がかかる。問題が起こったらお店ごと閉めなきゃいけない。店舗間で細かな差異があるから、同じレシピを使っても全く同じ味にはならない。
＊コンテナはその有名店のシェフ監修のレトルト食品。
どこでも買えてすぐに食べられる。有名店の味に近づけてあって、誰でもいつでも同じ味を再現できる。不具合があってもその商品だけ回収すれば良くて、キッチンや電子レンジを取り替える必要はない。新しい商品を買えばまたすぐに食べられる。

もしくは、
＊VMはゲーセンにある筐体。
ゲーセンに行かないと遊べないし、1台1台が高い。不具合があったらまるごと回収して、1台1台修理しなきゃいけない。
＊コンテナは家庭用ゲーム機のソフト。
本体があればどこでも遊べて、安い。不具合があってもソフトだけ直せば良い。DL版なら一斉に反映できる。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis, #Docker"
2025-06-10,ミニゲーム開発（コーディング: リファクタリング、パッケージ&クラス構成の見直し）,7,45,"パッケージ&クラス構成の見直しは概ね完了した！ ちゃんと責任分離できていると思う。パッケージは少し分けすぎている気もするので、最終確認のときにもう一度見直すことにして、一旦これでいく！
明日はようやくDockerに着手。完成が見え始めてきたぞ！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-09,ミニゲーム開発（コーディング: リファクタリング、演出の微調整、パッケージ&クラス構成の見直し（途中））,4,15,責任の振り分けをしながら構成を見直して、リファクタリングして実行→処理的に問題なくても気になったところを調整…と繰り返しているので、あまり進捗が目に見えないけど、ここは丁寧に確認したいので焦らず地道にコツコツ進める！ 明日も引き続き構成の見直しとリファクタリング！,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-08,ミニゲーム開発（コーディング: リファクタリング、バグの修正、エラーの修正、パッケージ&クラス構成の見直し（途中））,5,45,"バグを発見してしまって、その修正と実行確認、付随したエラーの修正と実行確認、微調整と実行確認…って感じで結構時間を取られてしまった💦
構成の見直しはまだ途中で、変更するところが出てくる見込み。良い感じに整理したい！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-06-07,ミニゲーム開発（コーディング: 初回クリア時の演出）,0,30,ほとんどPCに向かえなかったけど、初回クリア時の演出の微調整&実行確認はなんとかできた！,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-06,ミニゲーム開発（コーディング: 初回プレイ時の演出、サウンドエフェクトの追加、パーティクルエフェクトの追加、初回クリア時の演出（途中））,6,45,サウンドエフェクト、パーティクルエフェクトは通しで追加&確認できた。これで確定で良いと思う。初回プレイ時の演出もOK！ 良い感じにできて気に入ってる☺️ 初回クリア時の演出も実装&実行確認はできたので、DBのレコードを削除して分岐の確認ができれば完了！,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-05,ミニゲーム開発（コーディング: リファクタリング、初回プレイ時の演出（途中）、サウンドエフェクトの追加（途中）、パーティクルエフェクトの追加）,6,30,"サウンドエフェクトは本編もほぼ実装できて、残りはゲーム終了前のカウントダウンと終了時の2箇所。何種類かを組み合わせて&ずらして、完全イメージどおりとまではいかないけど、なんとかそれっぽい感じにはなったかなと思う。
初回プレイ時の演出は、DBのレコード削除して実行確認する。
パーティクルエフェクトはもともと入れていたものに加えて、ゲーム開始時と終了時にも追加した。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-04,ミニゲーム開発（コーディング: リファクタリング、スコアリストの表示フォーマットの調整、初回プレイ時の演出（途中）、サウンドエフェクトの追加（途中））,6,15,"スコアリストの表示、ガタガタに見えるのが気になったので、String.format()を使い、ヘッダー部分と併せて何度も微調整を重ねてできるだけ綺麗に見えるようにした。初回プレイ時の演出の中身は概ねできたので、条件分岐を加えて初回プレイ時のみ実行、それ以外は通常のゲーム開始、にする。
サウンドエフェクトは前述の演出部分のみ実装できた。サウンドの種類が多い&ボリュームとピッチのバランスが難しくてかなり悩んだ。何度も試して、なんとかこんな感じか？と思うもので着地。通しでプレイしたらまた印象変わるかもしれないけど、ひとまずは決定！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-03,ミニゲーム開発（コーディング: リファクタリング、難易度の調整、スコアボードの設置・更新、各種スコアリストの取得・表示）,6,45,"難易度調整は、迷ったけどNORMALとHARDの制限時間伸ばして着地。やっと良い感じのバランスになった！
スコアボード周りも実装できた。スコアリスト周りは、ひとまず一覧、全体ランキング、難易度別ランキングの5つに絞った。クリックとコマンドどちらからでも表示可。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-02,ミニゲーム開発（コーディング: リファクタリング、ハイスコア&自己ベスト更新メッセージ、難易度の調整（途中））,5,0,"ハイスコア&自己ベスト更新メッセージは実装できた。sendTitle()で表示する。スコアリストは全部ランキング形式のTOP5にして一覧、難易度別の4種類で良いのでは？と思えてきた。マルチプレイなら個人も欲しいけど、実質ソロプレイになるから表示内容被るもんなぁ、と。
再びの難易度調整。クリアできるイージーが一番高得点になるのは解せなかったので、難易度別に獲得ポイントを変えて、ノーマルとハードはそれぞれ倍率を変えてコンボボーナスも付与した。時間内にクリアした場合の加算倍率も変える予定（だがしかし、ノーマルとハードのクリアは現状ほぼ無理）。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-06-01,ミニゲーム開発（コーディング: リファクタリング、mapperを分割、スコアメニューの作成（途中）、ゲームメニューのクリックイベントを実装（途中））,4,0,"スコアメニューを作るにあたり、mapperのコード量が増えると見越してmapperとmapperのメソッドを呼ぶクラスをふたつに分けて、sessionはMainで代入して渡す方法に変更。Mainから渡すものが増えてきたので、プレイ中のデータの持ち方も一部変更した。
クリックイベントは、スコアメニュー（まだ空）を開く、難易度別にゲームを開始する、は実装できた。すでにゲーム開始中の場合はゲームニューを開けないようにする制限も実装済み。
スコアメニューはまだ表示する種類で迷ってる。一覧、難易度別一覧、個人（マルチプレイ対応の場合）はマストとして、個人は一覧and/or難易度別をどうするか、ソートは一覧なら登録順、スコア順だけで良いと思うけど、TOP5で絞るケースも作るならやっぱり新着順も欲しいかも、と悩み中🤔
スコアメニューは一旦保留にして、別の詰めを先にしたほうが良いかも。自己ベスト（マルチプレイ対応の場合）、ハイスコアを記録したときにスコア表示と合わせて表記できたら良いなと思ったのでそこに着手しようかな。今週中にコード完成、来週中に最終確認&全体完成を目標に進める！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-05-31,ミニゲーム開発（コーディング: リファクタリング、ゲームメニューの作成、難易度の選択を制限、ゲームメニューのクリックイベントを実装（途中））,3,0,"昨日のエラーは想定どおりに解消できた！ 引数で難易度を指定する場合も、選択を制限する（EASYをプレイしないとNORMALをプレイできない）ようにした。メニューはクリックイベントでスコアメニューを開く、難易度別にゲーム開始（選択制限付）、などを実装予定。
スコアメニューは、フィルター：一覧、難易度別（、個人、TOP5or10）、ソート：登録順、新着順、スコア順、あたりで考えているけど、フィルター×ソートを加味すると多くなるから、項目ボタンをクリックで表示するじゃなくて、項目ボタンはON/OFF切り替えにして表示ボタンを別で設けるのもありかも🤔","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-05-30,ミニゲーム開発（コーディング: リファクタリング、ゲームメニューの作成（途中））,5,45,"ゲームメニューをGUIで作成するのに伴い、下の難易度をプレイしないと上の難易度をプレイできないようにしようと思って、DBに進捗テーブルを追加。接続時にエラーが出て、パラメーターが見つからないという内容だったので、調べて@ paramをつけて解決。
booleanを返したい部分で、まだレコードがないからヌルポが発生。null対策としてbooleanじゃなくてBooleanにして、呼び出し元で分岐処理をしてみる。ここが上手くいけばゲームメニューは固められるはず。そしたらスコアリスト表示のソート、フィルターあたりを詰めていきたい！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-05-29,ミニゲーム開発（コーディング: リファクタリング、開始前&終了後のカウントダウン、残り時間を表示するボスバー、ゲームメニューの作成（途中））,5,45,"開始前カウントダウンとエンティティを出現させるタイミング、ゲームの制限時間カウント、の組み合わせ方に少し悩んだ。カウントダウンは別枠だよなと思って、エンティティの出現をゲームの制限時間カウント内に入れ込む（ゲームタイム==イニシャルタイム時に呼び出す）形にした。
コマンド実行だけじゃなくて、GUIから難易度やリスト表示を選択して実行できるようにする。リストはソート表示やフィルター表示もできるようにしたいけど、そうなるとソート×フィルターもしたくなるならメニューにどう落とし込むか悩む🤔","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-28,ミニゲーム開発（コーディング: DB接続（スコアリストの取得、スコア情報の追加）、リファクタリング）,3,30,DB周りは、講義を復習しつつ、スターターガイドを確認しながら実装。リストの取得もスコアの追加も無事できた！ ソートやフィルター、Dockerの使用も挑戦したいけど一旦保留。まずは別のところを詰めていきたい。,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell, #MySQL, #MyBatis"
2025-05-28,抽象クラスについて調べた,1,0,抽象クラスには、内容は決まっていないけど実行することは決まっているメソッドを書いておける。抽象クラスに必要なメソッドをかいておくことで、あとから定義して実装してもらうことができる。チーム開発では重要！,#Java
2025-05-27,ミニゲーム開発（コーディング: バグ・エラー修正、リファクタリング、ゲームの難易度を設定、スペシャルエンティティを設定）,8,30,"昨日のエラーは解消できた！ スペシャルエンティティの特殊効果の設定も、エラー出て手こずったけどなんとか解決！ 難易度はまだ調整する必要がありそう。いっそEpicを作って4段階にするのもありかも？ ファクタリリングは各所メソッド抽出したのと、BaseCommandを作ってonCommandをなくした。
抽象クラスはまだ理解が浅いのでもっと深めたい。Eventでifの早期リターンを重ねている部分にも使えるのかな？っていうのは講義のときからの疑問なので、調べてみる。引数で難易度を取得する部分も実装した。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-26,ミニゲーム開発（コーディング: バグ修正（途中）、ゲームの難易度を設定する（途中）、スペシャルエンティティを設定する（途中））,4,15,"被らない座標の取得は実装できて、それによって難易度も少し調整できた！ でもやっぱりまだ難しすぎるので、もう少しなんとかしたい。たまにエラーが出るときやエラーは出ないけどおかしな挙動をすることがあって、エラーの場合は場所と原因はわかるものの、どうしてそうなるときがあるのかわからず🤔
ひとまずアプローチを変えてみた。前のコードでもエラーが出るときと出ないときがあったので、何度か試して様子を見たい。直した部分と関連する部分の動きがおかしかったので、確認する！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-25,ミニゲーム開発（コーディング: リファクタリング、ゲームの難易度を設定する（途中）、スペシャルエンティティを設定する（途中））,5,45,"昨日は位置被っても面白いかもと思ったけど、何度か試してみたらやたらと被るときもあって煩わしいなと思ったので、やっぱり被らないようにしたい。GameDifficultyを列挙してるenumにxListとyListも加えて、spawn開始前にshuffleして頭からremoveしていけばいけそうかな🤔 明日試してみる！
難易度のレベル設定が難しくて、こんな感じかなと思っていた設計だと、
EASY=簡単。
NORMAL=めちゃめちゃ難しい。頑張れば数ペアできる。
HARD=ただクリックするゲーム。運が良ければペアできるかもね。
みたいになってしまっているので、もうちょっといい感じに調整したい💦

《メモ》
Stream APIの.limit()、.filter()、.flatMap()を組み合わせてペアのenumから難易度別にペアリストを生成することに成功。.flatMap()は同じ要素をふたつずつ、などができて便利。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-24,ミニゲーム開発（コーディング: リファクタリング、エフェクトをつける、ゲームの難易度を設定する（途中））,5,45,難易度によってspawn位置も変えようと思って（easyは規則的、normalとhardはランダム）、位置が被らないようにSplittableRandom()じゃなくてある範囲の数字でList作ってCollections.shuffle()して頭から取っていくのもありか？と試してみたけど、どこでList作ってどこでshuffleするかも悩むし、位置が被るのもそれはそれで面白いかも（LivingEntityなので上書きはされない&setAIはいじってないので押せば動かせる）と思って、結局SplittableRandom()を採用。出現させたEntityの管理あたりはもう少し詰めたほうが良さそう。ペア登録も要件を満たしているか心配になってきたから見直したい。,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-23,ミニゲーム開発（コーディング: 連続して右クリックしたEntityを判定、ペアが揃ったEntityを消滅させる、ペアを揃えるとスコアを獲得）,6,15,"ペア判定の部分、クリックでEntitiyを入れ替えて揃わなかったら元のEntityに戻す、というような処理にしていたのでデータのキャッシュの部分で少し躓いてエラー吐いてたけど無事解決！
スコアを獲得する部分は、lombokのSetterは使わずにaddScore()メソッドにした。
機能要件として「マルチプレイの考慮は不要」と指定があるけど、非機能要件として考慮しても良いのだろうか🤔
マルチプレイ対応にする場合、講義ではList<PlayerData>で管理してたけどMap<UUID, PlayerData>にしなかったのはなぜだろう、と考えていた🤔
処理速度はListの.stream().filter()よりMapの.get()のほうがO(1)だから速いはず。メモリ使用量はList<Mapだけど、スコアはDB登録だしミニゲームプレイ中の一時的なキャッシュだからそこまで食わないはず（実務では何人まで同時プレイ可能かのテストは必要と思われる）。可読性もMapのほうが高そう🤔
一時的なキャッシュだからこそわざわざMapで持たなくても、というのもありそう🤔 難しい。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-22,ミニゲーム開発（コーディング: コマンド実行でEntityを出現、出現させるEntityをペア登録（途中）、連続して右クリックしたEntityを判定（途中））,7,15,"昨日の位置が被る問題は、座標の指定方法を変えたら解決した！
Entityのペア登録も実装してはみたものの、そもそも何を以てして「ペアとして登録されている」といえるのか、という疑問が🤔
右クリックしたEntityの判定も実装したけど、ちょっと挙動が怪しい部分があったので、明日確認して修正する！","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-21,ミニゲーム開発（アイディア出し、コンセプト固め、コーディング: コマンド実行でEntityを出現（途中）、出現Entityのコンディションを設定、制限時間を設定）,7,30,"ノーマルは規則的な位置にspawnさせようと思ったらなぜか位置が被る子たちが🤔 もう一度確認してみる。
エンティティのコンディション設定はいくつか試して、いい感じに落ち着いた。","#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-20,職務経歴書の作成,0,30,,#就職活動
2025-05-20,Javaコース（リスキリング） 総復習テスト（中級編）,0,15,,#Java
2025-05-20,Javaコース 上級 ミニゲーム開発編（テーマ選択、要件定義、機能設計）,4,15,テーマは「神経衰弱」を選択。要件定義〜機能設計（願望も入ってる😅）までをざっと洗い出した（もっと細かいほうが良いかな🤔）。,"#Java, #Minecraftプラグイン開発, #個人開発, #BreakSpell"
2025-05-19,Javaコース 初級 Day1追加カリキュラム（学習ログの付け方を学ぼう）,3,0,,
2025-05-19,職務経歴書の作成,4,0,,#就職活動
2025-05-18,Javaコース 初級編の復習,3,0,,"#Java, #Minecraftプラグイン開発"
2025-05-18,職務経歴書の作成,0,30,,#就職活動
2025-05-17,オリジナルプラグイン開発（GitHubから不要なファイルを削除、Javadocの修正）,4,0,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-17,職務経歴書の作成,0,45,,#就職活動
2025-05-17,先輩受講生の方々のインタビュー動画を視聴,0,45,,#就職活動
2025-05-16,オリジナルプラグイン開発（プレイ動画の収録&編集、README完成、GitHubへリポジトリをpush）,5,45,余計なファイルまですべてpushしてしまったので、不要そうなものを確認して削除する！,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-16,先輩受講生の方々のGitHub巡り,1,0,,"#Java, #Minecraftプラグイン開発"
2025-05-15,オリジナルプラグイン開発（リファクタリング、プレイ動画の収録&編集）,5,15,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-15,先輩受講生の方々のGitHub巡り,1,0,,"#Java, #Minecraftプラグイン開発"
2025-05-14,職務経歴書の作成,0,30,,#就職活動
2025-05-14,オリジナルプラグイン開発（READMEの作成）,1,15,,"#Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-13,自己分析、職務経歴書の作成,2,0,,#就職活動
2025-05-13,オリジナルプラグイン開発（READMEの作成）,4,15,,"#Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-12,Javaコース 中級 プラグイン開発編 Day37（現場での開発の流れ(V字モデル / ウォーターフォール / アジャイル / スクラム)）,0,45,,#Mermaid
2025-05-12,Javaコース 中級 プラグイン開発編 Day38（3層構造、MVC）,0,45,,#Java
2025-05-12,Javaコース 中級 プラグイン開発編 Day39（プラグイン開発編のまとめと現場に出ることの大事さ）,0,30,,#Java
2025-05-12,オリジナルプラグイン開発（開発メモの整理、READMEの作成）,2,0,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-11,Javaコース 中級 プラグイン開発編 Day35（テスト設計、テスト手法）,1,0,「三角形の種類を判定するアプリケーション」として実行するべきテストの内容を考えて、シンプルなアプリでも多数のテストが必要だということを実感。SQLインジェクションやXSSに関する記事もいくつか読んだ。,#Java
2025-05-11,Javaコース 中級 プラグイン開発編 Day36（現場で使われるテスティングフレームワーク(JUnit)とその機能）,1,30,JUnitの導入に少し躓いた（最新バージョンを調べた結果、いろいろと記事を見すぎてtestImplementationとして書く内容に迷う）けど、IntelliJの公式ドキュメントを読んで解決！ 初めから公式ドキュメントを確認するべきでした。,"#Java, #JUnit, #Mockito"
2025-05-11,オリジナルプラグイン開発（開発メモの整理）,6,30,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-10,Javaコース 中級 プラグイン開発編 Day33（ゲームを作りながら学ぶ Java実践 DB⑤「DB周りの処理をリファクタリング」）,1,0,,"#Java, #Minecraftプラグイン開発, #MySQL, #MyBatis"
2025-05-10,Javaコース 中級 プラグイン開発編 Day34（ビルドツール解説(Maven / Gradle)）,0,30,,#Java
2025-05-10,DAY34の延長で、Gradleに関する記事を読んだ,0,45,,#Gradle
2025-05-09,Javaコース 中級 プラグイン開発編 Day31の課題,0,45,,"#Java, #Minecraftプラグイン開発, #MySQL, #MyBatis"
2025-05-09,Javaコース 中級 プラグイン開発編 Day32（ゲームを作りながら学ぶ Java実践 DB④「JDBCを使っていたInsertをMyBatisに変更」）,1,0,,"#Java, #Minecraftプラグイン開発, #MySQL, #MyBatis"
2025-05-09,オリジナルプラグイン開発（開発メモの整理）,2,0,開発メモの綺麗化。コードから手を離して設計の整理をしていると、ここはこうするべきだよなぁと改良点が見つかった（実装中も気になっていた）ので、READ MEのための整理を優先しつつ（最優先は講義）、公開前にコードも直したい！,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-08,Javaコース 中級 プラグイン開発編 Day31（ゲームを作りながら学ぶ Java実践 DB③「JDBCを使っていたSelectをMyBatisに変更」）,1,0,,"#Java, #Minecraftプラグイン開発, #MySQL, #MyBatis"
2025-05-07,Javaコース 中級 プラグイン開発編 Day29（ゲームを作りながら学ぶ Java実践 DB②「JDBCを使ったスコア情報の登録」）,1,0,"《メモ》
＊SQLはシングルクォーテーションで囲われたものを文字列とみなす","#Java, #Minecraftプラグイン開発, #MySQL, #MyBatis"
2025-05-07,Javaコース 中級 プラグイン開発編 Day30（データベースを利用するときに便利なO/Rマッパー）,0,30,,#Java
2025-05-07,オリジナルプラグイン開発（開発メモの整理、READMEの検討）,3,0,設計と開発メモなどに使っていたNotionの整理（綺麗化）。引き続き綺麗化しつつ、先輩受講生の方々のGitHubを参考にさせていただきながらREAD MEを考える。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-06,オリジナルプラグイン開発（リファクタリング、機能修正）,8,30,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-05,Javaコース 中級 プラグイン開発編 Day28（ゲームを作りながら学ぶ Java実践 DB①「JDBCを使ったシンプルなSelect」）,0,45,"《メモ》
＊MySQLのurlは”jdbc:mysql://<ホスト名>:<ポート番号>/<データベース名>”
＊ポート番号はログイン後にSHOW VARIABLES LIKE ‘port’;で確認できる
＊SELECT Host, User FROM mysql.user;でユーザー一覧を確認できる
＊statusで諸々の情報を確認できる","#Java, #Minecraftプラグイン開発, #MySQL"
2025-05-05,オリジナルプラグイン開発（リファクタリング）,4,45,リファクタリングを重ねてかなり見通しが良くなって、ここはこのほうが良いのでは？と見つかるようになってきた。だいぶスッキリしたと思うけど、まだ直せそうなところがあるのでもう少し手を加えたい。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-04,オリジナルプラグイン開発（マイクラプラグイン開発・リファクタリング、クラス&パッケージ構成の見直し）,4,30,パッケージ分類とクラスの分割をしたら少し見通しが良くなってきた。変数の宣言や代入、クラス参照あたりがごちゃっとしているのが気になっているので、引き続きクラスの分割をしつつ、メソッド抽出/インライン化の見直しもしたい,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-03,Javaコース 中級 プラグイン開発編 Day27（MySQLのインストールと動作確認、簡単なSQLの実践）,1,0,Homebrew、MySQLともにインストール時に少し躓いたけど、ターミナルに表示されたメッセージをしっかり読んだらすぐに解決した。SQLの構文は以前ちょっとだけかじったことがあったけど、改めて見たらやっぱりスプシのQUERY関数に似ていると思うので、とっつきやすいかもしれない。,#MySQL
2025-05-03,オリジナルプラグイン開発（マイクラプラグイン開発・リファクタリング、クラス&パッケージ構成の見直し）,3,15,処理の微調整とリファクタリングをした。クラスとパッケージの構成も一部見直しを行った。早い段階で実装した部分は特にごちゃっとしてしまっている気がするので、メソッドの整理もしたい。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-02,Javaコース 中級 プラグイン開発編 Day26（データベース(RDBMS / SQL / トランザクション / JDBC)）,0,45,,"#Java, #Minecraftプラグイン開発"
2025-05-02,オリジナルプラグイン開発（図鑑GUIを実装、リファクタリング）,5,0,"機能要件はすべて落とし込めたはず。非機能要件もいくつか実装済みだから、あとはひたすらリファクタリング&どこまで非機能要件を実現できるか🤔
面白いところ（たぶん）まで持っていくには全アイテムをいろいろな項目に分けて分類するというコードと関係ない部分での下準備が必要になると思っているので、そこに関しては機能追加としていずれアップデートする形にしたい。ので、まずはあまり面白くない段階で公開するかもしれない🙄","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-05-01,Javaコース 中級 プラグイン開発編 Day25（ゲームを作りながら学ぶ Java実践 機能拡張「難易度の追加、状態異常初期化」）,1,0,"《要点》
💡扱いたいものが何かによって、それに名前（クラス）をつける！","#Java, #Minecraftプラグイン開発"
2025-05-01,オリジナルプラグイン開発（図鑑GUIを実装）,3,45,"せっかくクラスを作ったのにStringのままにしてしまっていたものがあることに気付き、扱いたいものに合わせた型に修正。編集ボタンは一旦スポーンエッグにする方向で進めることにした。タマゴだらけになるけど、不自然ではないと思う（思いたい）。
調整中にエラーが出ないのに上手く動かなくなって、コードを確認してもう一度試そうとリロードしたらサーバーエラーで立ち上がらず💦 エラーメッセージを読んで当たりをつけてから調べたら、session.lockというファイルが生成されていたのが原因だとわかったので削除して立ち上げ直し、無事復活😌","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-30,Javaコース 中級 プラグイン開発編 Day24（ゲームを作りながら学ぶ Java実践 リファクタリング④「ゲーム終了後にスコアが入らないようにする」）,1,0,"《メモ》
＊Optionalはnullを許容するオブジェクト","#Java, #Minecraftプラグイン開発"
2025-04-30,オリジナルプラグイン開発（図鑑GUIを実装）,5,15,"至るところでnullチェックしているので、どこかしらでOptional使えそうなら使ってみたい。
null回避していたつもりだったけど、思わぬところでエラーが出てしまったので要解消😫
サバイバルモードで通常入手できないマテリアルを編集ボタンに使いたくてコマンドブロック3種を入れていたけど、Loreの警告文を消せないことがわかったのでまた考え直さねば。メニューボタンはスポーンエッグで統一したから、編集ボタンもスポーンエッグにするかなぁ🤔","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-29,Javaコース 中級 プラグイン開発編 Day23（ゲームを作りながら学ぶ Java実践 リファクタリング③「周囲の敵を消すのを、出現させた敵に限定する」）,0,45,,"#Java, #Minecraftプラグイン開発"
2025-04-29,オリジナルプラグイン開発（図鑑GUIを実装）,6,45,メニュー遷移はenumでまとめてみることにした。分岐が多いのは仕方ないと思うけど（たぶん）、これで少しはスッキリするはず！ GUIに入ってから体感的には全然進んでなくてやきもきするけど、ひとつひとつ解決できているので地道に頑張る。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-28,Javaコース 中級 プラグイン開発編 Day22（ゲームを作りながら学ぶ Java実践 リファクタリング②「様々なリファクタリング」）,1,0,"《メモ》
＊何のためにこのコードを書いているのか、意図が伝わらないもの、疑問が解決しないものはリファクタリングすべき
＊細かい部分から綺麗にしていき、見通しを良くしていく！","#Java, #Minecraftプラグイン開発"
2025-04-28,オリジナルプラグイン開発（図鑑GUIを実装）,5,0,GUIのメニューのクリックイベントがif地獄×switch-case地獄（GUI2画面×メニューボタン9個（+クリック時の状況による分岐））になっているので、スッキリは難しいかもしれないけど、できるだけわかりやすくなるようにしたい。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-27,Javaコース 中級 プラグイン開発編 Day21（ゲームを作りながら学ぶ Java実践 リファクタリング①「onCommandをなくす」）,1,0,コマンド実行だけじゃなくてイベント発火でもinstanceOfを中心にif文から始まることって結構あると思うのだけど、それも抽象クラスでスッキリするのだろうか🤔 抽象クラスをまだちゃんと理解できていないから、まずは今までどおりガード節を使ってネストが深くならないように工夫する方向で進める。,"#Java, #Minecraftプラグイン開発"
2025-04-27,オリジナルプラグイン開発（図鑑GUIを実装）,3,15,"ソートの分岐に手こずった。複雑な処理が増えてきているので一歩一歩進めたい。

《メモ》
＊元のList自体を並び替えたいときは、list.sort(Comparator.comparing(リストの要素->並び替える基準)でソートできる
＊元のリストを保持したい場合は、List<> sortedList=list .stream().sorted(Comparator.comparing(要素->基準)).collect(Collectors.toList())でソートできる
＊ベルトコンベアに次々に要素を流す→条件に合わせてひとつずつ処理を実行→要素を再び集めてリストにまとめるイメージ","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-26,Javaコース 中級 プラグイン開発編 Day20（ゲームを作りながら学ぶ Java実践⑨ 「ゲーム終了後に周辺の敵を削除」）,0,45,"《工夫したところ》
＊講義のなかでもうひとつの方法として挙げられていたListを使った処理を実装してみた。ちゃんと消滅したので合ってるのかな？ 今後の講義で再実装するとの記載があったので、そこで答え合わせしたい！","#Java, #Minecraftプラグイン開発"
2025-04-26,オリジナルプラグイン開発（図鑑GUIを実装）,1,45,処理の流れはほぼ固まったので、ひたすらコードに落とし込んでいきたい！ GUI操作ではいろいろな処理を行ったり来たりすることが想定されるので、ちゃんと自分が思っている動作になるか、それぞれの処理の関係性を整理しておいたほうが良さそう。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-25,Javaコース 中級 プラグイン開発編 Day19（ゲームを作りながら学ぶ Java実践⑧ 「敵の種類で点数を変える」）,0,45,"今まで敵別の点数をMap<EntityType, Integer>でやっていたけど、確かにswitch-caseで十分だったなと。
ゲーム難易度をEasy, Normal, Hardと設定したとして、それぞれ異なる種類の敵に異なる点数を持たせる、とかだったらMap<String, Map<EntityType, Integer>>で値を取得してスッキリ書けそうだけどぱっと見て条件分岐していることがわかりやすいからif文switch-case文のほうが良いのだろうか🤔
Mapだと格納→取得の処理をすることになるから、すぐに取り出すならわざわざ入れるまでもない、ってこともあるのかも。他でも参照するならありなのかな。","#Java, #Minecraftプラグイン開発"
2025-04-25,オリジナルプラグイン開発（図鑑GUIを実装）,6,0,遷移後のGUI配置がなんとか煮詰まってきたので、メニュー別の細かい処理を書ければ数日後には一旦通しで動かせるかも。それぞれの処理の実行確認後にリファクタリングしてはいるけど、ごちゃごちゃしてる気がするので、通しで動かせたら一から見直したい。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-24,Javaコース 中級 プラグイン開発編 Day18（ゲームを作りながら学ぶ Java実践⑦ 「スコアの表示」）,1,0,"《工夫したところ》
＊「GAME OVER」に変更、GOLD&BOLDにしてゲームっぽさを増やした","#Java, #Minecraftプラグイン開発"
2025-04-24,オリジナルプラグイン開発（図鑑GUIを実装）,6,30,メニューアイコンはスポーンエッグで統一に決定。クリックイベントでGUI→GUIの遷移も土台は実装できた。クリックイベントのスロットごとの条件分岐をなるべくスッキリ書きたいので工夫しなくては🤔,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-23,Javaコース 中級 プラグイン開発編 Day17（ゲームを作りながら学ぶ Java実践⑥ 「時間制限」）,0,45,"《メモ》
＊Bukkit.getScheduler().runTaskTimer()で時間設定","#Java, #Minecraftプラグイン開発"
2025-04-23,オリジナルプラグイン開発（図鑑GUIを実装）,5,30,"前回エラーが出ていたところは、想定していた原因が当たりだったので無事解決！ その後もたまに躓きながらもなんとかそれっぽいGUIになってきた。メニューアイコン代わりのマテリアルと操作不能スロットのマテリアルを何にするか考え中🤔💭
ここが固まってきたら、次はクリックイベントでGUI→GUIの遷移処理！ 見直したいところもあるかまだまだだけど、やっと機能要件の終わりが遠くのほうに見えてきた気がする…！","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-22,Javaコース 中級 プラグイン開発編 Day16（ゲームを作りながら学ぶ Java実践⑤ 「マルチプレイ対応」）,1,0,"《工夫したところ》
＊Lombokの追加コードを最新バージョンの1.18.38に変更して追加","#Java, #Minecraftプラグイン開発"
2025-04-22,オリジナルプラグイン開発（図鑑GUIを実装）,5,45,"イメージしていたGUIが標準GUIでは実装できないものだと判明😱（下調べの際、リソースパック+カスタムGUIの記事を拾ってしまっていた模様）
標準GUIの範囲内でそれっぽく見せられるように工夫する必要があるので一連の流れを実装してから配置は再考したい🤔
個人開発だからなんとかなるけど、やったことがないことから着手、の重要性を実感した！
createInventry→openInventory()はできたけど、setItem()のところでエラー。明日じっくり確認する！

《メモ》
＊List.subList(int fromIndex, int toIndex)で指定範囲内（<toIndex）の値でListを作成できる。","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-21,Javaコース 中級 プラグイン開発編 Day15（ゲームを作りながら学ぶ Java実践④ 「点数計算と合計表示」）,1,30,"《工夫したところ》
＊講義どおりに実装後、エンティティ別の点数にも挑戦した
→Mapでいけるのでは？と思い、Map<EntityType, Integer>で組み合わせを作っておいて、getEntityType()で取得した情報をキーにgetしたらできた（はず）！　正解かはわからないけど、まずはちゃんと動いて嬉しい😊","#Java, #Minecraftプラグイン開発"
2025-04-21,オリジナルプラグイン開発（リファクタリング、YAMLファイルの読み込み&書き出し）,3,15,"チャット入力で取得する部分の処理を実装できたけど、実際にプレイしてみたら、チャット入力中に敵に襲われる危険性もあるなと気付いて、マイクラの英語↔︎日本語の入力切替の手間も相まって、ユーザビリティの観点でイマイチだなと。
受動的（即チャットで入力させられる）より能動的（好きなタイミングで落ち着いて入力できる）ほうが良い気がしたので、プレイヤーにとって入力までのステップは少し増えるけどコマンド入力に変更する方向で進めようと思う！","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-20,オリジナルプラグイン開発（リファクタリング、YAMLファイルの読み込み&書き出し）,5,0,"曖昧だったnewで初期化する処理や、宣言時のprivate finalのfinalの意味がやっと腑に落ちた気がする！

＊中身の値を扱いたいとき→中身をもらったり追加したりするので空の器を用意しておく必要がある
＊そのまままるごと渡されるとき→器ごともらうから用意する必要ない

昨日書いたYAMLから中身取り出してMapに格納→メモリ上のMapをYAMLに書き込んで保存、書きながら単発で動かしたときにはちゃんと動いていると思ってたけど、通しで動かしたらちょこちょこアラがあって一連の処理を思い通りに実行するまでに時間がかかった💦
でもちゃんと一歩一歩前には進めてる！","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-19,Javaコース 中級 プラグイン開発編 Day14（ゲームを作りながら学ぶ Java実践③ 「ゲームスタート時の装備変更」）,0,45,,"#Java, #Minecraftプラグイン開発"
2025-04-19,オリジナルプラグイン開発（リファクタリング、YAMLファイルの読み込み&書き出し）,7,0,"やっとYAMLから中身取り出してMapに格納→メモリ上のMapをYAMLに書き込んで保存、のコードを書けた。まだ動作確認できていない部分もあるから、明日改めて処理の流れ確認してから動作確認してリファクタリングしたい！　次はチャットから取得する処理かGUI設計か🤔

《メモ》
＊LinkedHashMap<>：順番を保持できるマップ。YAMLへの書き出しなど順番が意味を持つデータに使える。","#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-18,Javaコース 中級 プラグイン開発編 Day13（ゲームを作りながら学ぶ Java実践② 「特定エリア内でランダムにエンティティを出現させる」）,1,15,"《要点&メモ》
💡乱数生成はSplittableRandomかSecureRandomを使う！
💡コーディング→実行→リファクタリング→実行…と繰り返す！
＊リファクタリング（メソッド抽出、変数のインライン化など）をすると可読性が上がり、デバッグや機能追加、変更がしやすくなる

Randomは実はランダムじゃないからSecureRandomを使うほうが良いというのは前に調べて知っていたけど、SplittableRandomは知らなかった！ 暗号化とかじゃなければSplittableRandomで良さそう。","#Java, #Minecraftプラグイン開発"
2025-04-18,オリジナルプラグイン開発（リファクタリング、YAMLファイルの読み込み&作成）,6,15,リファクタリングした。抽出すべきところ、インライン化すべきところの判断が難しい。YAMLファイルはジョイン時にファイルを確認してなければ作成&あれば読み込むところまではできた！ 中身を扱う処理も地道にやる！,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-17,Javaコース 中級 プラグイン開発編 Day12（ゲームを作りながら学ぶ Java実践① 「コマンドの実行でプレイヤーのステータスを変更する」）,1,0,"《要点》
💡原則やったことがない/実現可能性が不明など、リスクが高いものから着手する！
→納期を守るために不確定なものは早めに解消する必要がある（実現不可能or納期難しそうなどの場合、初期段階であれば調整の余地あるかも）
💡一気にやらずに、都度動作確認をしながら丁寧に着実に進める！

着手する順番については完全に盲点だった！　オリジナルプラグイン開発、モチベ維持&なるべく立ち止まらないようにわかりそうなところから進めていたけど、個人開発とはいえ時間は有限なので、難しそうなところに早めにアタックしようと思う！（実現可能であろうことは確認済）","#Java, #Minecraftプラグイン開発"
2025-04-17,オリジナルプラグイン開発（機能設計の見直し、コーディング、ドキュメント確認）,5,15,YAML形式かつconfig.ymlじゃないファイルを扱う予定のため、その方法を調べた。日本語でヒットしたサイトを見てもいまいち噛み砕けなかったけど、英語でヒットしたspigotの公式ドキュメントを読んだら理解できた気がしたのでやってみる！,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-16,Javaコース 転職サポート編 Day4（職務経歴書・履歴書テンプレート）,0,5,,#就職活動
2025-04-16,Javaコース 転職サポート編 Day5（職務経歴書の目的を理解しよう）,0,20,,#就職活動
2025-04-16,Javaコース 転職サポート編 Day6（フォーマットについて）,0,20,,#就職活動
2025-04-16,Javaコース 転職サポート編 Day7（職務経歴サマリーの書き方）,0,30,,#就職活動
2025-04-16,Javaコース 転職サポート編 Day8（個人開発の書き方）,0,30,,#就職活動
2025-04-16,Javaコース 中級 プラグイン開発編 Day11（ゲームを作る前に必要な「設計」）,0,45,"《メモ》
＊機能要件：必要不可欠なもの
＊非機能要件：あったら嬉しいもの

一旦全部書き出してから機能要件、非機能要件に振り分ける（非機能要件はさらに優先度つける）ほうが良いのかも？","#Java, #Minecraftプラグイン開発"
2025-04-16,オリジナルプラグイン開発（コーディング着手）,2,30,要件定義も見直して、少し調整した。機能設計部分をさらっとしかできていなかったので、ちゃんと自分でコードに落とし込めるように、もう一度しっかり考えたい。メソッドまで書く必要はないとのことだったけど、初めのうちは使えそうなメソッドも含めて書いても良さそう？,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-15,Javaコース 中級 プラグイン開発編 Day9（エンティティ解説と実践）,0,30,"《工夫したところ&メモ》
＊Mapの復習も兼ねてランダムでエンティティを出現させてみた
＊world.spawn()の第二引数はEntity.classのため、Map<Integer, Class<? extends Entity>と継承クラスまで指定する必要有","#Java, #Minecraftプラグイン開発"
2025-04-15,Javaコース 中級 プラグイン開発編 Day10（ブロック解説と実践）,0,30,"《工夫したところ&メモ》
中級Day10課題：
＊Day9と同様にランダムでブロックを出現させてみた
＊Material.DIAMONDを出現させようとして失敗（エラーは出なかったけど出現せず）。world.getBlockAt()を使っていたのでMaterial.DIAMOND_BLOCKが正解。
→Material.DIAMONDを出現させるならworld.dropItemNaturally()を使う（BlockBreakEventと組み合わせてマリオ的なことできそう）","#Java, #Minecraftプラグイン開発"
2025-04-15,オリジナルプラグイン開発（モック作成検討）,1,0,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-15,オリジナルプラグイン開発（タスクの細分化&管理表作成）,4,15,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-14,Javaコース 中級 プラグイン開発編 Day8（フレームワークの使い方、考え方）,1,0,"SpringBootでHelloWorldと表示、ひとまずQuickstart Guideの手順でZipをDLしてコードもコピペで実行してみたら表示できたから一応成功なのかな？
見たとおりにやっただけでいまいちピンときていないので、今度プロジェクトを作成するところから挑戦してみたい（スキップ可な課題のため優先度低め）","#Java, #SpringBoot"
2025-04-14,オリジナルプラグイン開発（アイディアの書き出し）,4,30,書き出したアイディアを基に要件定義、画面設計、内部設計のメモをまとめた。,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-13,Javaコース 中級 プラグイン開発編 Day6（デバッグの実践）,0,30,"《メモ》
＊実行＞デバッグ＞構成の編集＞新規構成の追加＞リモートJVMデバッグ",#Java
2025-04-13,Javaコース 中級 プラグイン開発編 Day7（ドキュメントの読み方(Javadoc)）,0,15,,#Java
2025-04-13,オリジナルプラグイン開発（アイディアの書き出し）,1,15,,"#Java, #Minecraftプラグイン開発, #個人開発, #Myアイテム図鑑"
2025-04-12,Javaコース 中級 プラグイン開発編 Day2（基本的なコマンドの作成方法）,1,0,"《工夫したところ》
＊getCommandの戻り値はnullになることがある（plugin.ymlに定義されていない場合）ため、Objects.requireNonNullを頭につけて例外処理した
＊private Main mainのmainは再代入されることがないのでfinalをつけた
＊ランダムでレベルが設定されるようにした","#Java, #Minecraftプラグイン開発"
2025-04-12,Javaコース 中級 プラグイン開発編 Day3（コマンドの拡張）,0,45,,"#Java, #Minecraftプラグイン開発"
2025-04-12,Javaコース 中級 プラグイン開発編 Day4（コンソールコマンドの実行）,0,45,"《要点》
💡プレイヤーが実行するコマンドとコンソールコマンドはクラスを分ける！
→ローカルで実行していてプレイヤーは自分だけだからコンソールコマンドを使う機会はなさそうだけど、公開サーバーで使うなら悪質プレイヤーへの警告・ペナルティ・強制退場とか、リアルタイムイベントの開始/終了合図とかに使えそう","#Java, #Minecraftプラグイン開発"
2025-04-12,Javaコース 中級 プラグイン開発編 Day5（設定ファイルの読み取り）,1,30,"《メモ》
＊saveDefaultConfig()→config.ymlを新規作成
＊private Main mainでMainの機能をコマンドクラスに引き渡す
＊サーバーのconfig.ymlはInteliJ上のconfig.ymlのコピーのため、編集してもInteliJ上のconfig.ymlには反映されない","#Java, #Minecraftプラグイン開発"
2025-04-11,Javaコース 転職サポート編 Day2（自己分析の重要性）,0,30,,#就職活動
2025-04-11,Javaコース 転職サポート編 Day3（自己分析シート）,0,30,,#就職活動
2025-04-11,Javaコース 中級 プラグイン開発編 Day0（中級編を始める前に）,0,30,,"#Java, #Minecraftプラグイン開発"
2025-04-11,Javaコース 中級 プラグイン開発編 Day1（イベントの理解）,3,0,"《工夫したところ》
＊Joinしたときのメッセージなので、sendMessageではなくsetJoinMessageを使用
＊EntityPickupItemEventを使ってアイテムを拾ったときにメッセージが表示されるようにした
→実装したら追加できそうな機能の案が浮かんだので、膨らませていきたい！","#Java, #Minecraftプラグイン開発"
2025-04-10,Javaコース 初級 基礎編 Day23〜Day24（就職活動をスタートしよう！）,1,30,,#就職活動
2025-04-10,Javaコース（リスキリング） 総復習テスト（初級編）,0,15,,"#Java, #Git, #GitHub"
2025-04-10,Javaコース 転職サポート編 Day1（転職活動をはじめよう！）,0,30,履歴書&職務経歴書の作成に着手した。,#就職活動
2025-04-09,希望分野（領域）の検討,0,30,,#就職活動
2025-04-09,職務経歴書に書けそうな内容の検討,0,30,,#就職活動
2025-04-08,Javaコース 初級 基礎編 Day22（就職活動をはじめる前に）,2,15,,#就職活動
2025-04-08,Javaコース 初級 基礎編 Day23〜Day24（就職活動をスタートしよう！）（途中）,0,30,,#就職活動
2025-04-07,Javaコース 初級 基礎編 Day19の課題（サンプルプラグイン用のプロジェクトをpush）,0,30,,"#Git, #GitHub"
2025-04-07,Javaコース 初級 基礎編 Day20（GitHubの現場での使われ方、チーム開発するときに必要な知識）,0,15,,"#Git, #GitHub"
2025-04-07,Javaコース 初級 基礎編 Day21（GitHubでPR作成、Issueの使い方、GitHubの機能解説）,0,45,"《メモ》
＊git push origin HEADはカレントブランチを同名のリモートリポジトリにプッシュすること
＊マージ後もブランチは残る（不要なら自分で削除できる）","#Git, #GitHub"
2025-04-06,Javaコース 初級 基礎編 Day19（Gitコマンドの使い方）,0,45,"リモートリポジトリへの登録、ローカルリポジトリ上でのブランチのマージ、変更内容をリモートリポジトリへ反映が無事できた。

《苦労したところ》
＊HTTPS接続ではエラーが出てしまい、ユーザー設定、認証キャッシュのクリア、リモートリポジトリのURL確認などぐぐって出てきたものはひととおり試すも解決できず（昨日）
＊SSH接続に切り替え、Docsの手順に沿って&躓いたらその箇所をさらにぐぐるを繰り返して成功！（今日）","#Git, #GitHub"
2025-04-05,Javaコース 初級 基礎編 Day17（Git）,0,30,,#Git
2025-04-05,Javaコース 初級 基礎編 Day18（GitHubのアカウントの作成とプロジェクトの作成）,0,30,,#GitHub
2025-04-05,Javaコース 初級 基礎編 Day19（Gitコマンドの使い方）（途中）,2,0,リモートリポジトリへの反映が上手くできずトライ&エラー中🤔 もう少し自分で調べて頑張ってみたい。それでもだめなら質問する！,"#Git, #GitHub"
2025-04-04,Javaコース 初級 基礎編 Day12（入出力処理）,0,30,"《工夫したところ》
初級Day12課題
＊チャット欄はすでに使用していたので、.spigot().sendMessage(ChatMessageType.ACTION_BAR)でアクションバーに表示
＊通常は「たーまやー！」と表示し、3のつく回数のときだけ「かーぎやー！」と表示","#Java, #Minecraftプラグイン開発"
2025-04-04,Javaコース 初級 基礎編 Day13（クラス、インターフェース、メソッド、継承、多態性）,0,45,"《要点》
💡クラス名とファイル名は一致する必要がある

《メモ》
＊アクセス修飾子：
・publicはありとあらゆるところからアクセス可能
・privateはそのクラスの中からしかアクセスできない
・publicを消す=package private、同一パッケージ内であればアクセス可能
＊単一責任の原則：ひとつのクラスにはひとつの役割を持たせる
＊引数の型/数が違う場合には同じメソッド名が使える（オーバーロード）","#Java, #Minecraftプラグイン開発"
2025-04-04,Javaコース 初級 基礎編 Day14（例外処理）,0,45,"《メモ》
＊Exception（検査例外）→例外処理が必要
＊RuntimeException（非検査例外）：Java自身が出す例外→チェック不要
＊Error（エラー）→どうしようもない","#Java, #Minecraftプラグイン開発"
2025-04-04,Javaコース 初級 基礎編 Day15（正規表現）,0,30,,"#Java, #Minecraftプラグイン開発"
2025-04-04,Javaコース 初級 基礎編 Day16（IntelliJの便利な機能やよく使う操作）,0,30,,#Java
2025-04-03,Javaコース 初級 基礎編 Day9（繰り返し、配列、拡張for文、List、Map）,1,30,"《メモ》
＊Javaでは配列はあまり使わない（使い勝手が悪い）

《工夫したところ》
初級Day9課題：
＊colorListをtypeListに変更してループ
＊BukkitRunnableを使って遅延処理
＊player.sendMessageでチャット欄にメッセージを表示
＊前回の続きとしてnextProbablePrime を使いたかったので、subtractで次の花火までの回数を算出して表示","#Java, #Minecraftプラグイン開発"
2025-04-03,Javaコース 初級 基礎編 Day10（StreamAPIとラムダ式）,1,0,"《要点》
💡自分でコードが書けるかよりも、自分が実現したいことを、ツール等を組み合わせた結果として書ける、ということが大事！","#Java, #Minecraftプラグイン開発"
2025-04-03,Javaコース 初級 基礎編 Day11（変数、値の取り扱い、簡単な計算）,0,45,"《要点》
💡変数名等の変更は「リファクタリング＞名前の変更」で行う（誤入力等によるバグ防止）","#Java, #Minecraftプラグイン開発"
2025-04-02,Javaコース 初級 基礎編 Day6（ChatGPTの活用方法）,1,15,,#Java
2025-04-02,Javaコース 初級 基礎編 Day7（基本型、標準API）,0,45,"＊プリミティブ型にはnullは入らない
＊正確な値を計算したい場合はBigDecimal型を使う
＊型を変換することをキャストという

《メモ》
＊BigInteger型はaddメソッドで加算","#Java, #Minecraftプラグイン開発"
2025-04-02,Javaコース 初級 基礎編 Day8（条件分岐）,1,0,"＊if文の中にif文を書く（ネストする）のは危険⚠️ バグが生まれやすいのでなるべく避ける
＊switch文は新しい書き方（->）で書く

《メモ》
＊isProbbablePrimeメソッドで素数判定
＊nextProbablePrimeの使いどころに悩み、今回の課題では使用できなかった","#Java, #Minecraftプラグイン開発"
2025-04-01,Javaコース 初級 基礎編 Day4の課題（家とベッドを作成し、リスポーン地を再設定）,1,0,,"#Java, #Minecraftプラグイン開発"
2025-04-01,Javaコース 初級 基礎編 Day5（サンプルプラグインの導入）,2,45,"《メモ》
＊pluginのMainメソッドはマイクラ本体にある
＊IntelliJでコードの中身（階層コード）を見るときは⌘+B

《工夫したところ》
＊pluginの新規プロジェクト作成時、ひとつ前のバージョンまでしか選択できなかったため、そのバージョンに合わせてマイクラ&サーバーのバージョンを変更した","#Java, #Minecraftプラグイン開発"
